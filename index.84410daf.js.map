{"mappings":"YAAA,MAAMA,EAAYC,SAASC,cAAc,6BACnCC,EAAaF,SAASC,cAAc,YACpCE,EAAuBH,SAASC,cAAc,SAC9CG,EAAsBJ,SAASC,cAAc,UAC7CI,EAAQL,SAASM,iBAAiB,UAClCC,EAAWP,SAASC,cAAc,aAClCO,EAAaR,SAASC,cAAc,gBACpCQ,EAAYT,SAASC,cAAc,eACnCS,EAAYV,SAASC,cAAc,eCRzC,MAAMU,EAAiBX,SAASC,cAAc,oBCE9C,MAAMW,EAAc,IFQL,MACbC,gBACER,EAAMS,SAAQC,IACZA,EAAKC,iBAAiB,SAAS,SAAUC,GACzBA,EAAIC,OAAOC,QAAQ,SAC3BC,mBAAmBC,UAAUC,OAAO,YAC1C,MAAMC,EAAoBC,KAAKJ,mBAE3BI,KAAKC,MACPF,EAAkBG,MAAQ,0EAShCH,EAASG,MAAA,EACP,O,EAECV,iBAAA,kBAAAC,GACJA,EAAAC,OAAAC,QAAA,SAEDC,mBAAqBC,UAAAC,OAAA,WACnB,G,sBAIFnB,EAAoBkB,UAAAM,IAAA,WAClBvB,EAAoBiB,UAAUC,OAAO,U,qBAIvCnB,EAA4BkB,UAAAC,OAAA,WAC1BlB,EAAqBiB,UAAAM,IAAA,U,qBAEJ,K,KACfd,gB,EACIQ,UAAUO,OAAU,W,YACtB,K,EACOP,UAAAO,OAAA,WACR7B,EAAAsB,UAAAQ,SAAA,WACGL,KAACM,oBAGJ/B,EAAAsB,UAAAQ,SAAA,YACGL,KAAAO,oBAGR,GACK,EAAC,E,cAEFd,G,KACAe,iBACD,KAAAf,EAAAC,OAAAe,SAAAC,KAAAT,MAOC,YALAhB,EAA+BY,UAC/BM,IAAC,Y,GAMF,KAAAV,EAAAC,OAAAe,SAAAE,MAAAV,QAAA,iDAAAW,KAAAnB,EAAAC,OAAAe,SAAAE,MAAAV,OAEC,YADEjB,EAA8Ba,UAASM,IAAA,Y,GAG1C,KAAAV,EAAAC,OAAAe,SAAAI,KAAAZ,MAED,YADAf,EAAgCW,UAAAM,IAAA,Y,MAG9BW,EAAW,IAAMC,SACjBC,EAAS,CACTN,KAAAjB,EAAAC,OAAAe,SAAAC,KAAAT,MACFU,MAASlB,EAAMC,OAACe,SAAeE,MAACV,MAC5BgB,QAAOxB,EAAKC,OAAGe,SAAAI,KAAAZ,OAEtBa,EAAAI,OAAA,UAAAC,KAAAC,UAAAJ,I,mBErFKK,EAAY,IDDH,MACbC,gBAAgB7B,GACdN,EAAeU,UAAUC,OAAO,YAChC,MAAMC,EAAoBN,EAAIC,OAAOE,mBAEjCH,EAAIC,OAAOO,MACbF,EAAkBG,MAAQ,0EAU5BH,EAAiBG,MAAA,E,mBAILT,G,WAKV8B,IAAA9B,G,EACAe,iBACD,KAAAf,EAAAC,OAAAe,SAAAE,MAAAV,QAAA,iDAAAW,KAAAnB,EAAAC,OAAAe,SAAAE,MAAAV,OAED,YADAd,EAAgCU,UAAAM,IAAA,Y,MAG9BW,EAAA,IAAAC,SACFC,EAAS,CACLL,MAAOlB,EAAAC,OAAQe,SAAAE,MAAAV,OAEtBa,EAAAI,OAAA,YAAAC,KAAAC,UAAAJ,I,mBChCKQ,EAAgBhD,SAASC,cAAc,mBACvCgD,EAAcjD,SAASC,cAAc,iBACrCiD,EAAgBlD,SAASC,cAAc,mBAE7CiD,EAAclC,iBAAiB,SAAU6B,EAAUM,mBAEnDD,EAAcjB,SAASE,MAAMnB,iBAC3B,QACA6B,EAAUC,iBAGZG,EAAYjC,iBAAiB,SAAUJ,EAAYwC,eAEnDJ,EAAchC,iBAAiB,QAASJ,EAAYyC,oB","sources":["src/js/message.js","src/js/subscribe.js","src/index.js"],"sourcesContent":["const container = document.querySelector('[data-toggle=\"container\"]');\r\nconst messageBox = document.querySelector('.message');\r\nconst messageButtonIsClose = document.querySelector('.open');\r\nconst messageButtonIsOpen = document.querySelector('.close');\r\nconst input = document.querySelectorAll('.input');\r\nconst textarea = document.querySelector('.textarea');\r\nconst emailError = document.querySelector('.email-error');\r\nconst nameError = document.querySelector('.name-error');\r\nconst textError = document.querySelector('.text-error');\r\n\r\nexport default class SendMessage {\r\n  addEventInput() {\r\n    input.forEach(item => {\r\n      item.addEventListener('input', function (evt) {\r\n        const label = evt.target.closest('label');\r\n        label.nextElementSibling.classList.remove('is-error');\r\n        const labelInputMessage = this.nextElementSibling;\r\n\r\n        if (this.value) {\r\n          labelInputMessage.style = `\r\n        font-size: 12px;\r\n        transform: translateY(-150%);\r\n    `;\r\n        } else {\r\n          labelInputMessage.style = '';\r\n        }\r\n      });\r\n    });\r\n    textarea.addEventListener('input', function (evt) {\r\n      const label = evt.target.closest('label');\r\n      label.nextElementSibling.classList.remove('is-error');\r\n    });\r\n  }\r\n\r\n  closeMessageWindow() {\r\n    messageButtonIsClose.classList.add('is-open');\r\n    messageButtonIsOpen.classList.remove('is-open');\r\n  }\r\n\r\n  openMessageWindow() {\r\n    messageButtonIsClose.classList.remove('is-open');\r\n    messageButtonIsOpen.classList.add('is-open');\r\n  }\r\n\r\n  toggleMessageWindow = () => {\r\n    this.addEventInput();\r\n    messageBox.classList.toggle('is-open');\r\n    setTimeout(() => {\r\n      container.classList.toggle('is-open');\r\n      if (container.classList.contains('is-open')) {\r\n        this.openMessageWindow();\r\n        return;\r\n      }\r\n      if (!container.classList.contains('is-open')) {\r\n        this.closeMessageWindow();\r\n        return;\r\n      }\r\n    }, 0);\r\n  };\r\n\r\n  submitMessage(evt) {\r\n    evt.preventDefault();\r\n    if (evt.target.elements.name.value === '') {\r\n      nameError.classList.add('is-error');\r\n      return;\r\n    }\r\n    if (\r\n      evt.target.elements.email.value === '' ||\r\n      !/^\\s*[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}\\s*$/i.test(\r\n        evt.target.elements.email.value\r\n      )\r\n    ) {\r\n      emailError.classList.add('is-error');\r\n      return;\r\n    }\r\n    if (evt.target.elements.text.value === '') {\r\n      textError.classList.add('is-error');\r\n      return;\r\n    }\r\n    const formData = new FormData();\r\n    const data = {\r\n      name: evt.target.elements.name.value,\r\n      email: evt.target.elements.email.value,\r\n      message: evt.target.elements.text.value,\r\n    };\r\n    formData.append('message', JSON.stringify(data));\r\n    evt.target.reset();\r\n  }\r\n}\r\n","const subscribeError = document.querySelector('.subscribe-error');\r\n\r\nexport default class Subscribe {\r\n  addStyleByInput(evt) {\r\n    subscribeError.classList.remove('is-error');\r\n    const labelInputMessage = evt.target.nextElementSibling;\r\n\r\n    if (evt.target.value) {\r\n      labelInputMessage.style = `\r\n        font-size: 12px;\r\n        transform: translateY(-150%);\r\n    `;\r\n    } else {\r\n      labelInputMessage.style = '';\r\n    }\r\n  }\r\n\r\n  onSubmitSubscribe(evt) {\r\n    console.log(evt);\r\n\r\n    evt.preventDefault();\r\n    if (\r\n      evt.target.elements.email.value === '' ||\r\n      !/^\\s*[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}\\s*$/i.test(\r\n        evt.target.elements.email.value\r\n      )\r\n    ) {\r\n      subscribeError.classList.add('is-error');\r\n      return;\r\n    }\r\n    const formData = new FormData();\r\n    const data = {\r\n      email: evt.target.elements.email.value,\r\n    };\r\n    formData.append('subscribe', JSON.stringify(data));\r\n    evt.target.reset();\r\n  }\r\n}\r\n","import SendMessage from './js/message';\r\nimport Subscribe from './js/subscribe';\r\nconst sendMessage = new SendMessage();\r\nconst subscribe = new Subscribe();\r\n\r\nconst messageButton = document.querySelector('.message-button');\r\nconst messageForm = document.querySelector('.message-form');\r\nconst subscribeForm = document.querySelector('.subscribe-form');\r\n\r\nsubscribeForm.addEventListener('submit', subscribe.onSubmitSubscribe);\r\n\r\nsubscribeForm.elements.email.addEventListener(\r\n  'input',\r\n  subscribe.addStyleByInput\r\n);\r\n\r\nmessageForm.addEventListener('submit', sendMessage.submitMessage);\r\n\r\nmessageButton.addEventListener('click', sendMessage.toggleMessageWindow);\r\n"],"names":["$42244780c08a4fa0$var$container","document","querySelector","$42244780c08a4fa0$var$messageBox","$42244780c08a4fa0$var$messageButtonIsClose","$42244780c08a4fa0$var$messageButtonIsOpen","$42244780c08a4fa0$var$input","querySelectorAll","$42244780c08a4fa0$var$textarea","$42244780c08a4fa0$var$emailError","$42244780c08a4fa0$var$nameError","$42244780c08a4fa0$var$textError","$df01684c490af8e0$var$subscribeError","$6bab210c6f592679$var$sendMessage","addEventInput","forEach","item","addEventListener","evt","target","closest","nextElementSibling","classList","remove","labelInputMessage","this","value","style","add","toggle","contains","openMessageWindow","closeMessageWindow","preventDefault","elements","name","email","test","text","formData","FormData","data","message","append","JSON","stringify","$6bab210c6f592679$var$subscribe","addStyleByInput","log","$6bab210c6f592679$var$messageButton","$6bab210c6f592679$var$messageForm","$6bab210c6f592679$var$subscribeForm","onSubmitSubscribe","submitMessage","toggleMessageWindow"],"version":3,"file":"index.84410daf.js.map"}